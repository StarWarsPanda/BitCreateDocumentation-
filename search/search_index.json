{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Visit GitHub for download -> GitHub . Welcome to the official documentation of BitCreate, a program to create 2d games on the TI-84 Plus CE! This documentation will show you how to start a new project and eventually create your very own game! About BitCreate This program is only a helpful tool to create games, and can be fully created with code in the TI Connect CE Program Editor. However, BitCreate makes it easier to create art and simplifies coding on a PC.","title":"Introduction"},{"location":"#introduction","text":"Visit GitHub for download -> GitHub . Welcome to the official documentation of BitCreate, a program to create 2d games on the TI-84 Plus CE! This documentation will show you how to start a new project and eventually create your very own game!","title":"Introduction"},{"location":"#about-bitcreate","text":"This program is only a helpful tool to create games, and can be fully created with code in the TI Connect CE Program Editor. However, BitCreate makes it easier to create art and simplifies coding on a PC.","title":"About BitCreate"},{"location":"strtngnwprjct/","text":"Starting a new project Open up BitCreate and click New->Project. All sprite creation is handled by BitCreate, however, you have to create your own code! Start Coding Let's start with a simple \"Hello World\" Start %Starts the program Background(255) %Refreshes the screen with a splash of white Repeat K=105 %Repeats until the enter key is pressed getKey %Gets the current keycode and sends it to variable K Text(0,0,0,255,1,1,Hello World) %Creates small text in black that says \"Hello world\" End Stop %Makes sure that the program safely stops As you can see, it is pretty simple to create text and display it. Next, let's explore how to display sprites Displaying sprites","title":"Creating a New Project"},{"location":"strtngnwprjct/#starting-a-new-project","text":"Open up BitCreate and click New->Project. All sprite creation is handled by BitCreate, however, you have to create your own code!","title":"Starting a new project"},{"location":"strtngnwprjct/#start-coding","text":"Let's start with a simple \"Hello World\" Start %Starts the program Background(255) %Refreshes the screen with a splash of white Repeat K=105 %Repeats until the enter key is pressed getKey %Gets the current keycode and sends it to variable K Text(0,0,0,255,1,1,Hello World) %Creates small text in black that says \"Hello world\" End Stop %Makes sure that the program safely stops As you can see, it is pretty simple to create text and display it. Next, let's explore how to display sprites","title":"Start Coding"},{"location":"strtngnwprjct/#displaying-sprites","text":"","title":"Displaying sprites"},{"location":"syntxrfrnce/","text":"Syntax Refernce Graphic Commands Palette(Color 1, Color 2,...) - Up to 36 colors. Color codes Background(Color) Render(Sprite Number,X,Y) Rect(x,y,width,height,color) Map{Sprite Width, Sprite Height, Sprite Number,Row,Column} - Have all sprites have the same width and height Text(x,y,color,background color,width,height,string) Logic Commands Start - Starts a new program. Note - After Start is declared, all sprites will be loaded. Stop - Ends the program safely Number in Variable - Variables: A - Z and \u03b8 For() While - Runs a loop of code if the expression is true , must be ended by an End Repeat - Runs a loop of code until the expression is false, must be ended by am End _ - Negative symbol. Note - You CANNOT write a - symbol as a negative symbol or it will throw a syntax error getKey - Gets the current key code and sends it to variable K Label - Defines a jump point. Can be defined with one or two letters (Including theta) Goto - Jumps to any defined label, creates an error when trying to jump to an undefiend label Pause() - Wait until any key is pressed, with a time limit (leave blank for no time limit) Wait() - Wait a certain amount of seconds %comment - Comments","title":"Syntax Refrence"},{"location":"syntxrfrnce/#syntax-refernce","text":"","title":"Syntax Refernce"},{"location":"syntxrfrnce/#graphic-commands","text":"Palette(Color 1, Color 2,...) - Up to 36 colors. Color codes Background(Color) Render(Sprite Number,X,Y) Rect(x,y,width,height,color) Map{Sprite Width, Sprite Height, Sprite Number,Row,Column} - Have all sprites have the same width and height Text(x,y,color,background color,width,height,string)","title":"Graphic Commands"},{"location":"syntxrfrnce/#logic-commands","text":"Start - Starts a new program. Note - After Start is declared, all sprites will be loaded. Stop - Ends the program safely Number in Variable - Variables: A - Z and \u03b8 For() While - Runs a loop of code if the expression is true , must be ended by an End Repeat - Runs a loop of code until the expression is false, must be ended by am End _ - Negative symbol. Note - You CANNOT write a - symbol as a negative symbol or it will throw a syntax error getKey - Gets the current key code and sends it to variable K Label - Defines a jump point. Can be defined with one or two letters (Including theta) Goto - Jumps to any defined label, creates an error when trying to jump to an undefiend label Pause() - Wait until any key is pressed, with a time limit (leave blank for no time limit) Wait() - Wait a certain amount of seconds %comment - Comments","title":"Logic Commands"}]}